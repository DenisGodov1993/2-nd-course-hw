// Задание 1
// Дан массив: [1, 5, 4, 10, 0, 3].
// Создайте цикл, который будет выводить элементы массива до тех пор, 
// пока не встретит значение 10. После вывода значения 10 в консоль 
// цикл должен прекратить свою работу.
// Подсказка
// Используйте цикл for или while для перебора элементов массива и 
// условие if для проверки значения элемента.

const Array = [1, 5, 4, 10, 0, 3];
for (let i = 0; i < Array.length; i++) {
    console.log(Array[i]);
    if (Array[i] === 10) {
        break; 
    } 
}

// Задание 2
// Дан массив: [1, 5, 4, 10, 0, 3].
// Найдите индекс значения 4 в этом массиве.
// Подсказка
// Для перебора массива и сравнения каждого элемента со значением 4 
// можно использовать цикл.

// const product = [1, 5, 4, 10, 0, 3];
// for (let i = 0; i < product.length; i++) {
//     if (product[i] === 4) {
//         console.log(i);
//         break; 
//     } 
// }

// или

const product = [1, 5, 4, 10, 0, 3];
console.log(product.indexOf(4));

// Задание 3
// Дан массив чисел: [1, 3, 5, 10, 20].
// С помощью метода join выведите элементы массива через пробел (пустую строку ' ').
// Подсказка
// Примените метод arr.join(' ');

const arr = [1, 3, 5, 10, 20];
console.log(arr.join(' '));

// Задание 4
// С помощью вложенных циклов создайте многомерный массив вида: 
// [[1, 1, 1], [1, 1, 1], [1, 1, 1]].
// Подсказка
// Используйте два вложенных цикла for.

const array = [];
for (let i = 0; i < 3; i++) {
    const array2 = [];
    for (let i = 0; i < 3; i++) {
        array2.push(1);
    }
    array.push(array2);
}
console.log(array);

// Задание 5
// Дан массив: [1, 1, 1]. Добавьте в конец массива значения 2, 2, 2.
// Подсказка
// Используйте метод push() для добавления элементов в конец массива.

const ar = [1, 1, 1];
ar.push(2, 2, 2);
console.log(ar);

// Задание 6
// Дан массив: [9, 8, 7, 'a', 6, 5].
// С помощью метода sort отсортируйте массив и удалите букву 'a' из массива. 
// Затем выведите массив.
// Подсказка
// Сначала отсортируйте массив, а затем используйте метод filter() для удаления буквы.

const Numbers = [9, 8, 7, 'a', 6, 5];
Numbers.sort();
NumNew = Numbers.filter(i => i !== 'a');
console.log(NumNew);

// Задание 7
// Дан массив: [9, 8, 7, 6, 5].
// Попросите пользователя угадать число с помощью метода prompt. 
// Если значение, которое ввел пользователь, есть в массиве, выведите в alert «Угадал», 
// в противном случае — «Не угадал».
// Подсказка
// Используйте метод includes() для проверки наличия элемента.

const Num = [9, 8, 7, 6, 5];
let userNumber = Number(prompt('Введите число, чтобы угадать загаданное!'));
if (Num.includes(userNumber)) {
    alert('Угадал');
} else {
    alert('Не угадал');
}

// Задание 8
// Дана строка: 'abcdef'. Выведите в консоль 'fedcba'.
// Для этого задания вам пригодится метод reverse(). 
// Он располагает элементы массива в порядке, обратном исходному.
// Подсказка
// Преобразуйте строку в массив, используйте reverse() и снова преобразуйте в строку.

let line = 'abcdef';
line = line.split('');
console.log(line);
line.reverse();
line = line.join('');
console.log(line);

// Задание 9
// Дан массив: [[1, 2, 3],[4, 5, 6]]. 
// Выведите в консоль массив вида: [1, 2, 3, 4, 5, 6].
// Подсказка
// Используйте оператор spread для объединения массивов.

// const arrays = [[1, 2, 3],[4, 5, 6]];
// const newArrays = [];
// for (let i = 0; i < arrays.length; i++) {
//     newArrays.push(...arrays[i]);   
// }
// console.log(newArrays);

// или

const arrays = [[1, 2, 3],[4, 5, 6]];
console.log(arrays.flat());

// Задание 10
// 1.Создайте массив с произвольными числами (диапазон от 1 до 10).
// 2.Переберите его с помощью цикла for.
// 3.В каждой итерации выведите в консоль сумму текущего и следующего элементов массива.
// Следующий элемент массива можно получить с помощью индекса: i + 1. 
// Обратите внимание, что у последнего элемента нет следующего.
// Подсказка
// Используйте цикл for для перебора элементов и вычисления суммы. 
// Учтите, что для последнего элемента нет последующего!

const arrayNumbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
for (let i = 0; i < arrayNumbers.length; i++) {
    if (arrayNumbers[i + 1]) {
        console.log(arrayNumbers[i] + arrayNumbers[i + 1]);
    }
}

// Задание 11
// Создайте функцию, которая принимает на вход массив целых чисел, 
// а возвращает массив квадратов этих чисел.
// Подсказка
// Используйте метод map() для создания нового массива на основе исходного массива.

function squareArrays(arrayIntegers) {
    return arrayIntegers.map(i => i ** 2);
}
console.log(squareArrays([2, 3, 5]));

// Задание 12
// Создайте функцию, которая принимает на вход массив строк, 
// а возвращает массив длины слов.
// Подсказка
// Используйте метод map() для создания нового массива, где каждый элемент 
// является длиной строки из исходного массива.

function getLength(arrayStrings) {
    return arrayStrings.map(i => i.length);
}
console.log(getLength(['World', 'Wide', 'Web']));

// Задание 13
// Создайте функцию, которая принимает на вход массив целых чисел, 
// а возвращает массив, содержащий только отрицательные значения.
// Подсказка
// Используйте метод filter() для создания нового массива на основе 
// условия проверки отрицательности числа.

function negativeNumbers(arrayNumbers) {
    return arrayNumbers.filter(i => i < 0);
}
console.log(negativeNumbers([5, -7, 2, -4, 8, 1]));

// Задание 14
// Создайте массив, состоящий из 10 значений. Значения массива необходимо 
// сгенерировать с помощью метода Math.random() в диапазоне от 0 до 10.
// В данном массиве найдите все четные значения и добавьте их в новый массив. 
// Результат работы программы необходимо вывести в консоль — это будут 
// два массива: исходный массив и массив с четными значениями.
// Подсказка
// Используйте цикл для генерации исходного массива и метод filter() для 
// создания массива с четными числами.

function randomNumber() {
    return Math.floor(Math.random() * 10);
}

const allNumbers = [];
for (let i = 0; i < 10; i++) {
    allNumbers.push(randomNumber());
}
console.log('Исходный массив:', allNumbers);

const evenNumbers = allNumbers.filter(i => i % 2 === 0);
console.log('Массив четных чисел:', evenNumbers);

// Задание 15
// Создайте массив, состоящий из 6 элементов. Элементы массива необходимо 
// сгенерировать с помощью Math.random() в диапазоне от 1 до 10.
// Требуется найти среднее арифметическое этих цифр, результат программы вывести 
// в консоль.
// Подсказка
// Для вычисления среднего арифметического воспользуйтесь методом reduce() для 
// суммирования всех элементов массива и разделите результат на их количество.

function arithmeticMean() {
    return Math.floor(Math.random() * 10) + 1;
}

const numberRange = [];
for (let i = 0; i < 6; i++) {
    numberRange.push(arithmeticMean());
}
console.log('6 чисел в диапазоне от 1 до 10:', numberRange);
console.log('среднее арифметическое 6 случайных чисел:', numberRange.reduce((a, b) => a + b) / numberRange.length);

// Основное задание по верстке макета:
// 1.Реализуйте связь с сайтом для второй игры.
// 2.Создайте игру, где пользователю предлагаются простые арифметические задачи

// Требования:
// 1.Сайт генерирует случайные задачи на сложение, вычитание, умножение и деление.
// 2.Запрашивает у пользователя ответ.
// 3.Проверяет правильность ответа и выводит результат.

// Последовательность действий
// Генерация задач:
// -Случайным образом создавайте арифметические задачи на сложение, вычитание, 
// умножение и деление.
// -Например, задачи могут выглядеть так: "5 + 3", "10 - 2", "4 * 7", "20 / 4".

// Запрос ответа:
// -Запрашивайте у пользователя ответ на сгенерированную задачу.
// -Например, используя функцию prompt().

// Проверка и вывод результата:
// -Проверьте правильность ответа пользователя.
// -Выведите результат проверки: верный ответ или ошибка.

// Критерии оценки:
// -Работа будет оценена по следующим критериям
// -Связь с сайтом для второй игры реализована.
// -Арифметические задачи на сложение, вычитание, умножение и деление генерируются 
// случайным образом.
// -Ответ на задачу запрашивается у пользователя с помощью prompt().
// -Ответ пользователя проверяется на правильность, результат проверки 
// (верный ответ или ошибка) выводится.
// -Результат работы загружен на GitHub и отправлена ссылка на pull request.


const operators = ['+', '-', '*', '/'];
let randomTask;
let correctAnswer;

function simpleArithmetic() {
    const operators = ['+', '-', '*', '/'];
    const num1 = Math.floor(Math.random() * 10) + 1; 
    const num2 = Math.floor(Math.random() * 10) + 1;
    const operator = operators[Math.floor(Math.random() * operators.length)];
    let randomTask = `${num1} ${operator} ${num2}`; 
    const userAnswer = Number(prompt(`Решите задачу: ${randomTask}`));
    
    switch (operator) {
        case '+':
            correctAnswer = num1 + num2;
            break;
        case '-':
            correctAnswer = num1 - num2;
            break;
        case '*':
            correctAnswer = num1 * num2;
            break;
        case '/':
            correctAnswer = num1 / num2;
            break;
    }

    if (userAnswer === correctAnswer) {
        alert('Поздравляем!!! Правильный ответ!');
    } else {
        alert('Ответ неправильный. Попробуйте снова!');
    }
}